#!/usr/bin/env python3
# -*- coding: utf-8 -*-
list_1 = [1,'abc','xyz']        #创建列表
list_2 = ['x','y','z']
list_1+list_2                   #两个列表合成一个
len(list_1)                     #列表长度
list_1[0] = 'def'               #把下标为0的元素就成'def'
list_1[1:]=list('world')        #把world转成列表，并替换到原列表下标开始的元素
list_1[1:1]=[1,2,3]             #把元素1，2，3按顺序插入到指定位置，注意是当做元素，而不是列表插入
list_1[1:2]=[]                  #删除元素，如果要删除从下标2开始到最后的元素  list_1[2:len(list_1)]=[]
list_1[1:2]                     #切片
list_1[1:]
list_1[:2]
list_1[-1:-2:-1]                #从最后面往前面切片，最后那个数是步长，默然从左往右，当从后面往前切的时候要记得加上-1或别的负数
list_1[:]                       #整个列表 
l = [1, 2, 3, 4,'a','b','A','B']
l.append(5)                     #在最后面加上5
l2=l.copy()                     #复制列表内容到列表l2  (浅复制，对应的还有深复制)
l2.clear()                      #清空列表
l.count(1)                      #统计1在列表中出现的次数，列表内容是可重复的
l.extend(l2)                    #把列表l2的内容加到列表l后面
l.index(1, 0, 4)                #从下标0开始到下标4为止查找1，找到1的下标，找到一个后即结束
l.insert(1, 7)                  #把7插入到列表中下标为1的位置
l.pop(1)                        #删除指定下标的元素，本例中的1是下标    参数为空默认是最后一个
l.remove(7)                     #删除从左到右遇到的第一个7，如果有N个7怎么删除呢？想一想
l.reverse()                     #反转列表，倒序排列
l.sort()                        #把列表元素按A-Z,a-z,0-9排序,列表中同时存在int和srt会报错
l3=sorted(l)                    #不改变原列表排序，生成一个新的
l.sort(key=len)                 #按试试排序，从短到长
l.sort(reverse=True)            #是否倒着排序，可选True,False,True为Z-A,z-a,9-0